[{"path":"https://lcrawlab.github.io/recallreproducibility/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 recallreproducibility authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lcrawlab.github.io/recallreproducibility/articles/01_figure1b-e.html","id":"simulated-data-with-one-true-group","dir":"Articles","previous_headings":"","what":"Simulated Data With One True Group","title":"1. Clustering Simulated Data (Figure 1)","text":"First, simulate data using splatter convert data format SeuratObject. Setting group.prob = c(1.0) results single group. , run typical analysis using Seurat also cluster using callback. Finally, plot UMAP results including true labels (one case), clusters found Seurat default parameters, clusters found callback.","code":"sim.groups <- splatter::splatSimulate(group.prob = c(1.0), method = \"groups\",                                       verbose = FALSE,                                       nGenes = 1000,                                       batchCells = 1000,                                       dropout.type = \"experiment\",                                        de.prob = 0.05)  seurat_obj <- Seurat::as.Seurat(sim.groups, counts = \"counts\", data = NULL) seurat_obj <- SeuratObject::RenameAssays(object = seurat_obj, originalexp = 'RNA')  seurat_obj@meta.data$Group = 1 seurat_obj <- callback::seurat_workflow(seurat_obj, num_variable_features = 1000, resolution_param = 0.8) seurat_obj <- callback::FindClustersCallback(seurat_obj, cores=6) simulation_one_group_scatter <- callbackreproducibility::custom_scatter(seurat_obj, reduction = \"umap\", group_by = \"Group\", x_title = \"UMAP 1\", y_title = \"UMAP 2\", pt.size = 6) + Seurat::NoLegend() simulation_one_group_seurat_scatter <- callbackreproducibility::custom_scatter(seurat_obj, reduction = \"umap\", group_by = \"seurat_clusters\", x_title = \"UMAP 1\", y_title = \"UMAP 2\", pt.size = 6) + Seurat::NoLegend()  simulation_one_group_callback_scatter <- callbackreproducibility::custom_scatter(seurat_obj, reduction = \"umap\", group_by = \"callback_clusters\", x_title = \"UMAP 1\", y_title = \"UMAP 2\", pt.size = 6) + Seurat::NoLegend()  ggplot2::ggsave(\"one_group_scatter.png\", simulation_one_group_scatter, width = 1.2 * 2^12, height = 2^12, units = \"px\") ggplot2::ggsave(\"one_group_seurat_scatter.png\", simulation_one_group_seurat_scatter, width = 1.2 * 2^12, height = 2^12, units = \"px\") ggplot2::ggsave(\"one_group_callback_scatter.png\", simulation_one_group_callback_scatter, width = 1.2 * 2^12, height = 2^12, units = \"px\")"},{"path":"https://lcrawlab.github.io/recallreproducibility/articles/01_figure1b-e.html","id":"simulated-data-with-three-true-groups","dir":"Articles","previous_headings":"","what":"Simulated Data With Three True Groups","title":"1. Clustering Simulated Data (Figure 1)","text":"First, simulate data using splatter convert data format SeuratObject. Setting group.prob = c(0.6, 0.2, 0.2) results three groups proportions 60%, 20%, 20%. , run typical analysis using Seurat also cluster using callback. plot UMAP results including true labels, clusters found Seurat default parameters, clusters found callback. Finally, plot grid UMAPs.","code":"sim.groups <- splatter::splatSimulate(group.prob = c(0.6, 0.2, 0.2), method = \"groups\",                             verbose = FALSE,                             nGenes = 1000,                             batchCells = 4000,                             dropout.type = \"experiment\",                              de.prob = 0.05)  seurat_obj <- Seurat::as.Seurat(sim.groups, counts = \"counts\", data = NULL) seurat_obj <- SeuratObject::RenameAssays(object = seurat_obj, originalexp = 'RNA') seurat_obj <- callback::seurat_workflow(seurat_obj, num_variable_features = 1000, resolution_param = 0.8) seurat_obj <- callback::FindClustersCallback(seurat_obj, cores=6) simulation_three_groups_group_scatter <- callbackreproducibility::custom_scatter(seurat_obj, reduction = \"umap\", group_by = \"Group\", x_title = \"UMAP 1\", y_title = \"UMAP 2\", pt.size = 2) + Seurat::NoLegend() simulation_three_groups_seurat_scatter <- callbackreproducibility::custom_scatter(seurat_obj, reduction = \"umap\", group_by = \"seurat_clusters\", x_title = \"UMAP 1\", y_title = \"UMAP 2\", pt.size = 2) + Seurat::NoLegend()  simulation_three_groups_callback_scatter <- callbackreproducibility::custom_scatter(seurat_obj, reduction = \"umap\", group_by = \"callback_clusters\", x_title = \"UMAP 1\", y_title = \"UMAP 2\", pt.size = 2) + Seurat::NoLegend()    ggplot2::ggsave(\"three_group_scatter.png\", simulation_three_groups_group_scatter, width = 1.2 * 2^12, height = 2^12, units = \"px\") ggplot2::ggsave(\"three_group_seurat_scatter.png\", simulation_three_groups_seurat_scatter, width = 1.2 * 2^12, height = 2^12, units = \"px\") ggplot2::ggsave(\"three_group_callback_scatter.png\", simulation_three_groups_callback_scatter, width = 1.2 * 2^12, height = 2^12, units = \"px\") column_label_1 <- wrap_elements(panel = textGrob('True Labels', gp = gpar(fontsize = 64))) column_label_2 <- wrap_elements(panel = textGrob('Seurat Default', gp = gpar(fontsize = 64))) column_label_3 <- wrap_elements(panel = textGrob('callback', gp = gpar(fontsize = 64, fontfamily = \"Courier\")))   umap_grid <- column_label_1 + column_label_2 + column_label_3 +   simulation_one_group_scatter + simulation_one_group_seurat_scatter + simulation_one_group_callback_scatter +   column_label_1 + column_label_2 + column_label_3 +   simulation_three_groups_group_scatter + simulation_three_groups_seurat_scatter + simulation_three_groups_callback_scatter +   plot_layout(widths = c(5, 5, 5),               heights = c(1,3,1,3))  ggplot2::ggsave(\"umap_grid.png\", umap_grid, width = 2 * 1.5 * 2^12, height = 2 * 2^12, units = \"px\")"},{"path":"https://lcrawlab.github.io/recallreproducibility/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alan DenAdel. Author, maintainer.","code":""},{"path":"https://lcrawlab.github.io/recallreproducibility/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DenAdel (2024). recallreproducibility: Reproducibility recall manuscript. R package version 1.0.0, https://lcrawlab.github.io/recallreproducibility/.","code":"@Manual{,   title = {recallreproducibility: Reproducibility of recall manuscript},   author = {Alan DenAdel},   year = {2024},   note = {R package version 1.0.0},   url = {https://lcrawlab.github.io/recallreproducibility/}, }"},{"path":[]},{"path":"https://lcrawlab.github.io/recallreproducibility/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Reproducibility of recall manuscript","text":"hope make simple possible reproduce results found knockoff calibration method avoid -clustering single-cell RNA-sequencing. end, organized analysis scripts series R vignettes repository.","code":""},{"path":"https://lcrawlab.github.io/recallreproducibility/index.html","id":"reproducing-figures-from-the-recall-manuscript","dir":"","previous_headings":"","what":"Reproducing Figures from the recall manuscript","title":"Reproducibility of recall manuscript","text":"Clone repository: , navigate repo directory launch R can build entire website using following line R code. Note Rmarkdown file fully run R default. properly run Rmarkdown file run website building process, need remove file header. recommend vignettes actually use recall, sc-SHC, CHOIR clustering long runtime. Rather, R portions files put script run using Rscript.","code":"git clone https://github.com/lcrawlab/recallreproducibility cd recallreproducibility R pkgdown::build_site() knitr::opts_chunk$set(eval = FALSE)"},{"path":"https://lcrawlab.github.io/recallreproducibility/index.html","id":"relevant-citations","dir":"","previous_headings":"","what":"Relevant Citations","title":"Reproducibility of recall manuscript","text":"recall currently bioRxiv, . . DenAdel, M. Ramseier, . Navia, . Shalek, S. Raghavan, P. Winter, . Amini, L. Crawford. knockoff calibration method avoid -clustering single-cell RNA-sequencing. bioRxiv.","code":""},{"path":"https://lcrawlab.github.io/recallreproducibility/index.html","id":"questions-and-feedback","dir":"","previous_headings":"","what":"Questions and Feedback","title":"Reproducibility of recall manuscript","text":"questions concerns recallreproducibility recall R package, please contact Alan DenAdel Lorin Crawford. feedback manuscript figure reproducibility greatly appreciated.","code":""}]
